* complete test suite, using code coverage:
  - test suite for vectors, esp. performance compared to std::vector
  - test suite for Lie algebras and groups, based on examples in p/

* Allow much more complicated coefficients: rationals, real, complex, non-prime finite fields/rings

* Finish z.h fastint arithmetic (localint<-1U>).

* Improve matrix code:
  -  make matrix a class with cleaner interface, so one can substitute linbox or other fast implementation
  - use shorter arrays to improve cache locality,
  - avoid fillin,
  - avoid coefficient explosion,
  - use finite fields,
  - (in local rings) permute basis to get rid of redundant generators
  - use mpq or double coefficients for torsion-free mode

* Make nq a library: accept calls to
  - NewLiePresentation
  - ProductNode, SumNode etc. to create relators
  - AddGen(lpres, string)
  - AddRel(lpres, node)
  - LieNQ(lpres, maxclass)

* Use C++ streams rather than fprintf
