* add restricted Lie algebras, with ^p operation

* separate coeff's used for fp presentation, pc presentation and matrix. Have operator "map" to convert between types, and "kernel" as substitute for TorsionExp

* complete test suite, using code coverage

* Finish z.h fastint arithmetic (localint<-1U>).

* Implement rationals (mpq or double) for torsion-free part

* Improve matrix code:
  -  make matrix a class with cleaner interface, so one can substitute linbox or other fast implementation
  - use shorter arrays to improve cache locality,
  - avoid fillin,
  - avoid coefficient explosion,
  - use finite fields,
  - (in local rings) permute basis to get rid of redundant generators

* Make LieNQ a library: accept calls to
  - NewLiePresentation
  - ProductNode, SumNode etc. to create relators
  - AddGen(lpres, string)
  - AddRel(lpres, node)
  - LieNQ(lpres, maxclass)

* Use C++ streams rather than fprintf
