* Accept groups: *, ^-1, {a,b} = a^-1*b^-1*a*b, a^b, and combinatorial collector

* Renumber arrays and generators from 0; use std::set, std::vector rather than C lists

* Improve matrix code: use shorter arrays to improve cache locality, avoid fillin, avoid coefficient explosion, use finite fields, (in local rings) permute basis to get rid of redundant generators

* Make LieNQ a library: accept calls to
  - NewLiePresentation
  - ProductNode, SumNode etc. to create relators
  - AddGen(lpres, string)
  - AddRel(lpres, node)
  - LieNQ(lpres, maxclass)

* Make TotalGens local to pcpresentation.cc, possibly with an "ExtendPresentation" doing all the work

* Finish z.h fastint arithmetic

* Complete arithmetic test suite

* Use C++ streams rather than fprintf

* Make TorsionExp a coeff, not a ulong

* Introduce mpq or real(double) coeff, for torsion-free part

* add "metabelian" and "exponent-p" laws; or, even better, endomorphisms

* Find/fix bug "when adding tail to commutator, it's not necessarily the correct def. e.g. [a6,a2] = a11 + .... + a41, and a41 gets defined there. However, the correct definition of a41 is [a16,a6] probably. (at least, of correct degree!)"
